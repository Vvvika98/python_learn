#1 - минимальное и максимальное значение 
my_tuple = (-214, 181, -139, 448, -664, -66, 213, 832, 717, -462, -924, -706, -85, -244, -222, -340, -482, -518, -781, 759, -593, 905, -354, -377, -141, -742, 383, -381, 109, -639, -480, -810, -686, 892, -612, 696, 993, 791, 631, -493, -218, -829, -275, 619, -628, -241, -565, -835, -69, 747, 711, -252, -811, -407, -153, 904, 933, -254, 307, -493, -419, -109, -543, 155, -127, 613, -452, -459, 856, 562, 333, -66, -77, -598, -779, -278, 867, 321, -20, -415, -357, 735, -906, -14, -370, 453, -630, -736, -830, -917, 32, 422, -895, 198, 284, 472, -986, -964, -73, 29)

# print(min(my_tuple), max(my_tuple))

#2 - среднее арифметическое кортежа 
my_tuple = (-214, 181, -139, 448, -664, -66, 213, 832, 717, -462, -924, -706, -85, -244, -222, -340, -482, -518, -781, 759, -593, 905, -354, -377, -141, -742, 383, -381, 109, -639, -480, -810, -686, 892, -612, 696, 993, 791, 631, -493, -218, -829, -275, 619, -628, -241, -565, -835, -69, 747, 711, -252, -811, -407, -153, 904, 933, -254, 307, -493, -419, -109, -543, 155, -127, 613, -452, -459, 856, 562, 333, -66, -77, -598, -779, -278, 867, 321, -20, -415, -357, 735, -906, -14, -370, 453, -630, -736, -830, -917, 32, 422, -895, 198, 284, 472, -986, -964, -73, 29)

sr = sum(my_tuple) / len(my_tuple)
#print(sr)


#3 - сложить кортеж 
a = (1,)
b = ('R',)
c = ('A',)
d = (2,)

result = a*3 + b*5 + c*8 +d*5
#print(result)

#4 - сделать кортеж от 1го до 2го числа 
# a = int(input())
# b = int(input())
my_tuple = tuple(range(a,b+1))

#print(my_tuple)


#5  сделать кортеж двадрат нечетных чисел от заданного числа 
n = int(input())                #создаем на ввод 
result = []                     #создаем пустой список 
for i in range(n, (n**2)+1):    #создаем цикл фор n*n эквивалетно n**2, +1 т.к. в рендже полуоткрытый интервал 
    if i % 2 != 0:              #создаем условие если нечетное 
        result.append(i)        #добавляем методом в пустой список 
print(tuple(result))            #выводим результа переобразовывая в кортеж


#через генераторы списка, не умею так сама решать ИИ помог 
n = int(input())

result = tuple(i for i in range(n, n*n + 1) if i % 2 != 0) 
print(result)


#6 числа по индексам 
my_tuple = (32, 45, 32, 60, 43, 19, 39, 75, 50, 12, 53, 13, 28, 70, 68, 5, 64, 55, 30, 47, 23, 20, 17, 36, 45, 31, 46, 50, 33, 45, 9, 41, 12, 57, 40, 43, 47, 51, 56, 54, 40, 30, 37, 23, 43, 66, 64, 27, 44, 75, 51, 2, 19, 72, 30, 8, 29, 43, 7, 73, 34, 65, 54, 50, 43, 6, 50, 45, 49, 30, 39, 50, 41, 70, 38, 16, 31, 51, 72, 45, 58, 39, 50, 56, 24, 30, 9, 53, 27, 31, 68, 56, 26, 39, 34, 50, 10, 12, 3, 27)


print(my_tuple[44])
print(my_tuple[-9])

#7 срезы 
my_tuple = (32, 45, 32, 60, 43, 19, 39, 75, 50, 12, 53, 13, 28, 70, 68, 5, 64, 55, 30, 47, 23, 20, 17, 36, 45, 31, 46, 50, 33, 45, 9, 41, 12, 57, 40, 43, 47, 51, 56, 54, 40, 30, 37, 23, 43, 66, 64, 27, 44, 75, 51, 2, 19, 72, 30, 8, 29, 43, 7, 73, 34, 65, 54, 50, 43, 6, 50, 45, 49, 30, 39, 50, 41, 70, 38, 16, 31, 51, 72, 45, 58, 39, 50, 56, 24, 30, 9, 53, 27, 31, 68, 56, 26, 39, 34, 50, 10, 12, 3, 27)

slice_5_10 = my_tuple[5:11]
slice_from_20 = my_tuple[20:]
slice_to_35 = my_tuple[:35]

print(slice_5_10)
print(slice_from_20)
print(slice_to_35)

#8 - развернуть с помощью среза 

my_tuple = (32, 45, 32, 60, 43, 19, 39, 75, 50, 12, 53, 13, 28, 70, 68, 5, 64, 55, 30, 47, 23, 20, 17, 36, 45, 31, 46, 50, 33, 45, 9, 41, 12, 57, 40, 43, 47, 51, 56, 54, 40, 30, 37, 23, 43, 66, 64, 27, 44, 75, 51, 2, 19, 72, 30, 8, 29, 43, 7, 73, 34, 65, 54, 50, 43, 6, 50, 45, 49, 30, 39, 50, 41, 70, 38, 16, 31, 51, 72, 45, 58, 39, 50, 56, 24, 30, 9, 53, 27, 31, 68, 56, 26, 39, 34, 50, 10, 12, 3, 27)

print(my_tuple[::-1])

#9 - подсчитать кол-во вхождений 50 в кортеже 
my_tuple = (32, 45, 32, 60, 43, 19, 39, 75, 50, 12, 53, 13, 28, 70, 68, 5, 64, 55, 30, 47, 23, 20, 17, 36, 45, 31, 46, 50, 33, 45, 9, 41, 12, 57, 40, 43, 47, 51, 56, 54, 40, 30, 37, 23, 43, 66, 64, 27, 44, 75, 51, 2, 19, 72, 30, 8, 29, 43, 7, 73, 34, 65, 54, 50, 43, 6, 50, 45, 49, 30, 39, 50, 41, 70, 38, 16, 31, 51, 72, 45, 58, 39, 50, 56, 24, 30, 9, 53, 27, 31, 68, 56, 26, 39, 34, 50, 10, 12, 3, 27)


print(my_tuple.count(50))

#10 - При помощи цикла for обойдите слова

words_tuple = ('quaint', 'leftovers', 'thesis', 'density', 'retired', 'weak', 'tolerate',
               'sensitivity', 'primary', 'definition', 'determine', 'bring', 'monstrous',
               'hurl', 'timetable', 'month', 'advocate', 'provoke', 'stress', 'omission')

for word in words_tuple:
    print(f"Длина слова {word} = {len(word)}")

#11 - среднее арифметическое всех нечетных чисел 
my_tuple = (-214, 181, -139, 448, -664, -66, 213, 832, 717, -462, -924, -706, -85, -244, -222, -340, -482, -518, -781, 759, -593, 905, -354, -377, -141, -742, 383, -381, 109, -639, -480, -810, -686, 892, -612, 696, 993, 791, 631, -493, -218, -829, -275, 619, -628, -241, -565, -835, -69, 747, 711, -252, -811, -407, -153, 904, 933, -254, 307, -493, -419, -109, -543, 155, -127, 613, -452, -459, 856, 562, 333, -66, -77, -598, -779, -278, 867, 321, -20, -415, -357, 735, -906, -14, -370, 453, -630, -736, -830, -917, 32, 422, -895, 198, 284, 472, -986, -964, -73, 29)

result = []
for word in my_tuple:
    if word % 2 != 0:
        result.append(word)
print(sum(result) / len(result))


#12 - для каждой строки создать пару, состоящую из самой строки и её перевёрнутой версии
result = []
strings = ["hello", "world", "madam", "python"]
# strings = ["level", "refer", "code", "12321"]
for word in strings:
    if word == word[::-1]:
        result.append(word)
    else:
        result.append((word, word[::-1])) #почему метод возвращает НОН Я НЕ ПОНИМАЮ  
        # print(result)
          
print(result)

#13 Напишите программу, которая выводит все возможные битвы, удовлетворяющие условию

players = [("Alice", 10), ("Bob", 15), ("Charlie", 20), ("Dave", 25)]
max_difference = 6
    
# result = []

# for player in players:
#     print(player)
    # if (players[1][1] > players[0][1]) <= max_difference:
        # print(f"{players[0]} vs {players[1]}")


# Для извлечения элементов внутри кортежей, нужно сначала получить нужный кортеж из списка с помощью среза (или индекса), 
# а затем обратиться к элементу внутри этого кортежа по индексу.

for i in range(len(players)):
    for j in range(i + 1, len(players)):  # Начинаем со следующего игрока, чтобы избежать повторов и сравнения игрока с самим собой
        name1, power1 = players[i] #"распаковка" перовго игрока - кортежа по индексу
        name2, power2 = players[j]  #"распаковка" второго игрока - кортежа по индексу
        difference = abs(power1 - power2) #используя модуль ABS вычисляем разницу сил (модуль делает число всего положительным)
        if difference <= max_difference:
            print(f"{name1} vs {name2}") #ф-строка для вывода результата